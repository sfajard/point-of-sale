// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(uuid())
  name String
  sku String @unique
  price Int
  discount Float @default(0)
  sold Int @default(0)
  rating Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  description String?
  tags String[]
  categoryId String
  category Category @relation(fields: [categoryId], references: [id]) 
  stock Int @default(0)
  transactionItems TransactionItem[]
  imageUrls String[]
  cart Cart[]
}

model Category {
  id String @id @default(uuid())
  name String
  isFeatured Boolean @default(false)
  imageUrls String[]
  products Product[]
}

model Transaction {
  id String @id @default(uuid())
  transactionItems TransactionItem[]
  totalAmount Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id String @id @default(uuid())
  products Product[]
}

model TransactionItem {
  id String @id @default(uuid())
  quantity Int
  transactionId String
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  productId String
  product Product @relation(fields: [productId], references: [id])

  @@index([transactionId])
  @@index([productId])
}

